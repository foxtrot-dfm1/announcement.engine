# tox file not runned by github

[tox]
envlist =
    build_instance,
#    docs,
#    coverage-report,

[gh-actions]
python =
    3.8: build_instance

[testenv]
basepython = python3.8

extras =
    develop
    test

commands =
    {envbindir}/buildout -q -c {toxinidir}/{env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} bootstrap
#    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} annotate
    {envbindir}/buildout -n -qq -c {toxinidir}/{env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} install test robot
    coverage run {envbindir}/test -v1 --auto-color {posargs}
    coverage run {envbindir}/test -v --all -t robot {posargs}

setenv =
    COVERAGE_FILE=.coverage.{envname}
    version_file=test_plone52.cfg
    Plone52: version_file=test_plone52.cfg

deps =
    -rrequirements.txt
    Plone52: -cconstraints_plone52.txt
    coverage


[testenv:coverage-report]
usedevelop = True
basepython = python3.7

deps =
    coverage
    -c constraints_plone52.txt

setenv =
    COVERAGE_FILE=.coverage

commands =
    coverage erase
    coverage combine
    coverage html
    coverage xml
    coverage report


[lint]
deps =
    isort<5
    flake8
    # helper to generate HTML reports:
    flake8-html
    # Useful flake8 plugins that are Python and Plone specific:
    flake8-coding
    flake8-debugger
    flake8-deprecated
    flake8-print
    #flake8-pytest
    flake8-todo
    mccabe
    # Potential flake8 plugins that should be used:  # TBD
    #flake8-blind-except
    #flake8-commas
    #flake8-docstrings
    #flake8-mypy
    #flake8-pep3101
    #flake8-plone-hasattr
    #flake8-string-format
    #flake8_strict
    #flake8-quotes
    #flake8-polyfill

commands =
    mkdir -p {toxinidir}/reports/flake8
    - flake8 --format=html --htmldir={toxinidir}/reports/flake8 --doctests src setup.py
    flake8 --doctests src setup.py
    isort --check-only --recursive {toxinidir}/src

whitelist_externals =
    mkdir

[testenv:isort-apply]
deps =
    isort<5

commands =
    isort --recursive --apply {toxinidir}/src

[testenv:docs]
deps =
    Sphinx

commands =
    sphinx-build -b html -d _build/docs/doctrees docs _build/docs/html

[testenv:build_instance]
basepython = python3.8

commands =
    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={toxinidir} bootstrap
    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={toxinidir} annotate
    {envbindir}/buildout -c {toxinidir}/{env:version_file} buildout:directory={toxinidir}
